apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: sync-helm-chart
spec:
  params:
    - name: isSyncChart
      type: string
    - name: inHarborUrl
      type: string
    - name: inHarborImage
      type: string
    - name: outHarborUrl
      type: string
    - name: outHarborImage
      type: string
    - name: chartName
      type: string
    - name: chartVersion
      type: string

  steps:
    - name: sync-harbor-chart
      image:  core-harbor-devops-ali.wise-paas.com.cn/library/k8s-helm:v3.1.1.1
      env:
        - name: inHarborUsername
          valueFrom:
            secretKeyRef:
              name: docker
              key: username
        - name: inHarborPassword
          valueFrom:
            secretKeyRef:
              name: docker
              key: password
        - name: outHarborUsername
          valueFrom:
            secretKeyRef:
              name: docker-core
              key: username
        - name: outHarborPassword
          valueFrom:
            secretKeyRef:
              name: docker-core
              key: password
      script: |
        #!/usr/bin/env sh

        if [ $(inputs.params.isSyncChart) = "true" ];then
        inHarborImage=`echo $(inputs.params.inHarborImage)|sed 's/[[:space:]]//g'`
        outHarborImage=`echo $(inputs.params.outHarborImage)|sed 's/[[:space:]]//g'`
        inProjectName=`echo $inHarborImage|awk -F '/' '{print $1}'`
        outProjectName=`echo $(inputs.params.outHarborImage)|awk -F '/' '{print $1}'`
        inImage=$(inputs.params.inHarborUrl)/$inHarborImage
        echo "------ helm add repo https://$(inputs.params.inHarborUrl)/chartrepo/$inProjectName"
        helm repo add --username $inHarborUsername --password $inHarborPassword $inProjectName https://$(inputs.params.inHarborUrl)/chartrepo/$inProjectName
        echo -e "\n------ helm pull inProjectName/$(inputs.params.chartName) --version $(inputs.params.chartVersion)"   
        helm pull --version $(inputs.params.chartVersion) $inProjectName/$(inputs.params.chartName)
        if [ $? -ne 0 ]
        then
           echo "------ sync image failed"
           exit 1
         fi

        tar zxvf $(inputs.params.chartName)-$(inputs.params.chartVersion).tgz
        if [ $? -ne 0 ]
        then
           echo "------ sync image failed"
           exit 1
         fi
        sed -i 's/Always/IfNotPresent/g' $(inputs.params.chartName)/values.yaml
        export IFS=","
        harborUrls=$(inputs.params.outHarborUrl)
        for u in $harborUrls
        do
        outImage=$u/$outHarborImage
        sed -i 's#'$inImage'#'$outImage'#g'  $(inputs.params.chartName)/values.yaml
        echo -e "\n------ helm add repo https://$u/chartrepo/$outProjectName"
        helm repo add --username $outHarborUsername --password $outHarborPassword $u https://$u/chartrepo/$outProjectName
        /opt/bin/helmpush $(inputs.params.chartName) $u
        if [ $? -ne 0 ]
        then
           echo "------ sync image failed"
           exit 1
         fi
        echo -e "\n------ sync chart success"
        done

        else
           echo "skip sync chart"
        fi
