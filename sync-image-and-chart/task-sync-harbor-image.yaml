apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: sync-harbor-image
spec:
  inputs:
    params:
      - name: inHarborUrl
        type: string
      - name: inHarborImage
        type: string
      - name: imageTag
        type: string
      - name: outHarborUrl
        type: string
      - name: outHarborImage
        type: string


  steps:
    - name: sync-harbor-image
      image: docker
      env:
        # Connect to the sidecar over TCP, with TLS.
        - name: DOCKER_HOST
          value: tcp://localhost:2376
        # Verify TLS.
        - name: DOCKER_TLS_VERIFY
          value: '1'
        # Use the certs generated by the sidecar daemon.
        - name: DOCKER_CERT_PATH
          value: /certs/client
        - name: inHarborUsername
          valueFrom:
            secretKeyRef:
              name: docker
              key: username
        - name: inHarborPassword
          valueFrom:
            secretKeyRef:
              name: docker
              key: password
        - name: outHarborUsername
          valueFrom:
            secretKeyRef:
              name: docker-core
              key: username
        - name: outHarborPassword
          valueFrom:
            secretKeyRef:
              name: docker-core
              key: password
      script: |
        inImage=$(inputs.params.inHarborUrl)/$(inputs.params.inHarborImage):$(inputs.params.imageTag)
        outImage=$(inputs.params.outHarborUrl)/$(inputs.params.outHarborImage):$(inputs.params.imageTag)
        docker login $(inputs.params.inHarborUrl) -u $inHarborUsername -p $inHarborPassword
        docker login $(inputs.params.outHarborUrl) -u $outHarborUsername -p $outHarborPassword
        docker pull $inImage
        docker tag $inImage $outImage
        docker push $outImage


      volumeMounts:
        - mountPath: /certs/client
          name: dind-certs
  sidecars:
    - image: docker:dind
      name: server
      args:
        - --storage-driver=vfs
        - --userland-proxy=false
        - --debug
      securityContext:
        privileged: true
      env:
        # Write generated certs to the path shared with the client.
        - name: DOCKER_TLS_CERTDIR
          value: /certs
      volumeMounts:
        - mountPath: /certs/client
          name: dind-certs
      # Wait for the dind daemon to generate the certs it will share with the
      # client.
      readinessProbe:
        periodSeconds: 1
        exec:
          command: ['ls', '/certs/client/ca.pem']

  volumes:
    - name: dind-certs
      emptyDir: {}
